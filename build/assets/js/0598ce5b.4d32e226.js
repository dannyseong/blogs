"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4807],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>g});var n=r(7294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,s=function(e,t){if(null==e)return{};var r,n,s={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,s=e.mdxType,a=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=p(r),u=s,g=c["".concat(l,".").concat(u)]||c[u]||m[u]||a;return r?n.createElement(g,o(o({ref:t},d),{},{components:r})):n.createElement(g,o({ref:t},d))}));function g(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=r.length,o=new Array(a);o[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[c]="string"==typeof e?e:s,o[1]=i;for(var p=2;p<a;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},6036:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var n=r(7462),s=(r(7294),r(3905));const a={title:"Why Use Express?",tags:["javascript","nodejs","express"],sidebar_label:"1. Why Use Express?",sidebar_position:1},o=void 0,i={unversionedId:"Express/why_use_express",id:"Express/why_use_express",title:"Why Use Express?",description:"Node.js",source:"@site/docs/Express/1_why_use_express.md",sourceDirName:"Express",slug:"/Express/why_use_express",permalink:"/docs/Express/why_use_express",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Express/1_why_use_express.md",tags:[{label:"javascript",permalink:"/docs/tags/javascript"},{label:"nodejs",permalink:"/docs/tags/nodejs"},{label:"express",permalink:"/docs/tags/express"}],version:"current",sidebarPosition:1,frontMatter:{title:"Why Use Express?",tags:["javascript","nodejs","express"],sidebar_label:"1. Why Use Express?",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"2. Programming with databases",permalink:"/docs/Database/programming_db"},next:{title:"2. Chaining middleware",permalink:"/docs/Express/chaining_middleware"}},l={},p=[{value:"Node.js",id:"nodejs",level:2},{value:"<strong>Characteristics and Challenges:</strong>",id:"characteristics-and-challenges",level:3},{value:"Express Framework",id:"express-framework",level:2},{value:"<strong>Advantages of Using Express.js:</strong>",id:"advantages-of-using-expressjs",level:3},{value:"<strong>Node.js&#39;s <code>http</code> Module vs Express.js</strong>:",id:"nodejss-http-module-vs-expressjs",level:2}],d={toc:p},c="wrapper";function m(e){let{components:t,...r}=e;return(0,s.kt)(c,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"nodejs"},"Node.js"),(0,s.kt)("p",null,"In Node.js, using ",(0,s.kt)("inlineCode",{parentName:"p"},"http")," package, we create a server and manually check the request methods (such as GET, POST, PUT, DELETE, ALL, USE) using conditional statements, like this:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},"const http = require('http');\nconst fs = require('fs');\n\nconst server = http.createServer((req, res)=>{\n    const url = req.url;\n    const method = req.method;\n    if (method === 'GET'){\n        // GET response code\n    } else if (method === 'POST'){\n        // POST response code\n    } else if (method === 'PUT'){\n        // POST response code\n    } else if (method === 'DELETE'){\n        // POST response code\n    }\n}\n\nserver.listen(8080)\n")),(0,s.kt)("h3",{id:"characteristics-and-challenges"},(0,s.kt)("strong",{parentName:"h3"},"Characteristics and Challenges:")),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("strong",{parentName:"li"},"Manual Routing"),": Developers must manually write conditional logic to handle different HTTP methods and routes."),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("strong",{parentName:"li"},"Verbose"),": More lines of code are required for even simple tasks, like sending responses or parsing request bodies."),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("strong",{parentName:"li"},"Limited Functionality"),": There's no native support for things like middleware, template engines, or sessions.")),(0,s.kt)("h2",{id:"express-framework"},"Express Framework"),(0,s.kt)("p",null,"Express.js is a web application framework built on top of Node.js that simplifies many of the complexities associated with the raw ",(0,s.kt)("strong",{parentName:"p"},(0,s.kt)("inlineCode",{parentName:"strong"},"http"))," module:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},"const express = require('express');\nconst app = express();\n\napp.get('/posts', function(req, res, next){\n    res.send(...);\n}\n\napp.post('/posts', function(req, res, next){\n    res.send(...);\n}\n\napp.put('/posts/:id', function(req, res, next){\n    res.send(...);\n}\n\napp.delete('/posts/:id', function(req, res, next){\n    res.send(...);\n}\n\napp.listen(8080);\n")),(0,s.kt)("h3",{id:"advantages-of-using-expressjs"},(0,s.kt)("strong",{parentName:"h3"},"Advantages of Using Express.js:")),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("strong",{parentName:"li"},"Simplified Routing")," : Express offers methods corresponding to HTTP verbs, making the code more explicit and readable. This design pattern improves maintability."),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("strong",{parentName:"li"},"Easy Parameter Handling"),": Express's routing allows for easy capture of URL parameters and query strings, simplifying data retrieval from the client."),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("strong",{parentName:"li"},"Middleware Support"),": The second argument registers a callback function, known as middleware. This function takes three arguments: request object (containing received data), response object (allowing you to respond), and next (to move to the next middleware). This powerful concept enables you to chain together functionality in a very flexible way."),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("strong",{parentName:"li"},"Built-in Helpers"),": Express provides various built-in methods like ",(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("inlineCode",{parentName:"strong"},"res.send()"))," or ",(0,s.kt)("inlineCode",{parentName:"li"},"res.json()"),"that simplify sending responses, parsing incoming data, handling cookies, and more."),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("strong",{parentName:"li"},"Template Engine Integration"),": Express supports various template engines, allowing server-side rendering of dynamic HTML."),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("strong",{parentName:"li"},"Extensibility"),": Express is compatible with a wide range of plugins and additional libraries, making it easy to add more complex features like authentication, database integration, etc.")),(0,s.kt)("h2",{id:"nodejss-http-module-vs-expressjs"},(0,s.kt)("strong",{parentName:"h2"},"Node.js's ",(0,s.kt)("inlineCode",{parentName:"strong"},"http")," Module vs Express.js"),":"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Flexibility vs. Convenience"),": While Node.js's ",(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("inlineCode",{parentName:"strong"},"http")),' module offers a more flexible and "bare-bones" approach, Express.js provides higher-level abstractions that make development quicker and more convenient.'),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Code Length"),": Express.js typically results in shorter, more readable code compared to handling everything manually with the ",(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("inlineCode",{parentName:"strong"},"http"))," module."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Feature Set"),": Express.js brings a rich set of features, like middleware support and easy routing, that would require additional manual effort with just Node.js.")))}m.isMDXComponent=!0}}]);