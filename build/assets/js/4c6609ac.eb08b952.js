"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7851],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>g});var i=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=i.createContext({}),p=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=p(e.components);return i.createElement(s.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},f=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(t),f=r,g=d["".concat(s,".").concat(f)]||d[f]||u[f]||a;return t?i.createElement(g,o(o({ref:n},c),{},{components:t})):i.createElement(g,o({ref:n},c))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=f;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[d]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<a;p++)o[p]=t[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}f.displayName="MDXCreateElement"},397:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var i=t(7462),r=(t(7294),t(3905));const a={title:"File Processing",tags:["php"],sidebar_label:"8. File Processing",sidebar_position:8},o=void 0,l={unversionedId:"PHP/file_processing",id:"PHP/file_processing",title:"File Processing",description:"File processing is a fundamental aspect of programming, allowing you to interact with files stored on a system. In PHP, you can perform various file operations, such as reading, writing, and appending, to manage and manipulate data. Let's delve deeper into the key concepts of file processing:",source:"@site/docs/PHP/8_file_processing.md",sourceDirName:"PHP",slug:"/PHP/file_processing",permalink:"/docs/PHP/file_processing",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/PHP/8_file_processing.md",tags:[{label:"php",permalink:"/docs/tags/php"}],version:"current",sidebarPosition:8,frontMatter:{title:"File Processing",tags:["php"],sidebar_label:"8. File Processing",sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"7. Structuring a PHP File: Best Practices",permalink:"/docs/PHP/how_to_structure_php"},next:{title:"9. Action Script and Guestbook Example",permalink:"/docs/PHP/action_script"}},s={},p=[{value:"1. Including and Processing Files",id:"1-including-and-processing-files",level:2},{value:"2. Reading and Appending Files",id:"2-reading-and-appending-files",level:2},{value:"3. Creating and Overwriting Files",id:"3-creating-and-overwriting-files",level:2},{value:"4. Designing Data in Text Files",id:"4-designing-data-in-text-files",level:2}],c={toc:p},d="wrapper";function u(e){let{components:n,...t}=e;return(0,r.kt)(d,(0,i.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"File processing is a fundamental aspect of programming, allowing you to interact with files stored on a system. In PHP, you can perform various file operations, such as reading, writing, and appending, to manage and manipulate data. Let's delve deeper into the key concepts of file processing:"),(0,r.kt)("h2",{id:"1-including-and-processing-files"},"1. Including and Processing Files"),(0,r.kt)("p",null,"While PHP offers ",(0,r.kt)("inlineCode",{parentName:"p"},"include")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"require")," to incorporate entire files into a code, file processing typically involves more fine-grained operations like reading and writing data lline by line. This is achieved using file pointers"),(0,r.kt)("h2",{id:"2-reading-and-appending-files"},"2. Reading and Appending Files"),(0,r.kt)("p",null,"Consider a scenario where we want to append the contents of one file to another. Here an example using PHP:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$fp_in = fopen($input, "r");\n$fp_out = fopen($output,"a");\nwhile (!feof($fp_in)) {\n  $line = fgets($fp_in, 4096);\n  fputs(fp_out, $line);\n  }\nfclose($fp_in);\nfclose($fp_out);\n')),(0,r.kt)("p",null,"In this code snippet:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'fopen($input, "r")')," opens the input file in read mode."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'fopen($output, "a")')," opens the output file in append mode."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"while")," loop reads each line from the input file and appends it to the output file."),(0,r.kt)("li",{parentName:"ul"},"The end-of-file condition is checked before reading each line."),(0,r.kt)("li",{parentName:"ul"},"Finally, both file pointers are closed using ",(0,r.kt)("inlineCode",{parentName:"li"},"fclose()"),".")),(0,r.kt)("h2",{id:"3-creating-and-overwriting-files"},"3. Creating and Overwriting Files"),(0,r.kt)("p",null,'A new file or overwrite an existing one by opening it with the "w"(write) access mode can be created. This is useful when starting fresh or updating the contents of a file.'),(0,r.kt)("h2",{id:"4-designing-data-in-text-files"},"4. Designing Data in Text Files"),(0,r.kt)("p",null,"When structuring data in text files, careful design is vital. A file's format should facilitate easy data extraction, ensure an unambiguous structure, and enable seamless usage by different apllications. A common approach involves using one line for each logical record, with a designated character (like a comma or tab) used to separate logical fields within each record."))}u.isMDXComponent=!0}}]);