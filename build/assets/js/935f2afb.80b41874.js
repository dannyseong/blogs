"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Database","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"1. SQLite vs MySQL","href":"/docs/Database/sqlite_mysql","docId":"Database/sqlite_mysql"},{"type":"link","label":"2. Programming with databases","href":"/docs/Database/programming_db","docId":"Database/programming_db"}]},{"type":"category","label":"Express","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"1. Why Use Express?","href":"/docs/Express/why_use_express","docId":"Express/why_use_express"},{"type":"link","label":"2. Chaining middleware","href":"/docs/Express/chaining_middleware","docId":"Express/chaining_middleware"},{"type":"link","label":"3. Features of Middleware","href":"/docs/Express/express_middleware","docId":"Express/express_middleware"},{"type":"link","label":"4. Express.json()\\n","href":"/docs/Express/json_middleware","docId":"Express/json_middleware"},{"type":"link","label":"5. Error Handling in Express","href":"/docs/Express/error_handling","docId":"Express/error_handling"},{"type":"link","label":"6. Express.Router()\\n","href":"/docs/Express/router","docId":"Express/router"},{"type":"link","label":"7. Express.static()\\n","href":"/docs/Express/static_middleware","docId":"Express/static_middleware"},{"type":"link","label":"8. Express.urlencoded()\\n","href":"/docs/Express/urlencoded_middleware","docId":"Express/urlencoded_middleware"}]},{"type":"category","label":"Git","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"What is Git Flow?","href":"/docs/Git/git_flow","docId":"Git/git_flow"},{"type":"link","label":"Merge conflict","href":"/docs/Git/git_merge_conflict","docId":"Git/git_merge_conflict"},{"type":"link","label":"Version Control System and Git","href":"/docs/Git/version_control_and_git","docId":"Git/version_control_and_git"}]},{"type":"category","label":"JavaScript","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"1. Execution Context #1","href":"/docs/JavaScript/execution_context","docId":"JavaScript/execution_context"},{"type":"link","label":"2. Execution Context #2","href":"/docs/JavaScript/execution_context2","docId":"JavaScript/execution_context2"},{"type":"link","label":"3. Execution Context #3","href":"/docs/JavaScript/execution_context3","docId":"JavaScript/execution_context3"},{"type":"link","label":"5. Object","href":"/docs/JavaScript/object","docId":"JavaScript/object"},{"type":"link","label":"Closure","href":"/docs/JavaScript/closure","docId":"JavaScript/closure"},{"type":"link","label":"When, Where, and How to use the arrow function syntax!!","href":"/docs/JavaScript/why_use_arrow_function","docId":"JavaScript/why_use_arrow_function"}]},{"type":"category","label":"Laravel","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"1. What is Web Framework","href":"/docs/Laravel/what_is_webframework","docId":"Laravel/what_is_webframework"},{"type":"link","label":"2. Creating Laravel Project","href":"/docs/Laravel/creating_new_project","docId":"Laravel/creating_new_project"},{"type":"link","label":"3. Routes","href":"/docs/Laravel/route_laravel","docId":"Laravel/route_laravel"},{"type":"link","label":"4. View in Larabel","href":"/docs/Laravel/view_laravel","docId":"Laravel/view_laravel"},{"type":"link","label":"5. Concept of Templating Languages","href":"/docs/Laravel/templating","docId":"Laravel/templating"},{"type":"link","label":"6. Blade Template for Laravel","href":"/docs/Laravel/blade_templating","docId":"Laravel/blade_templating"},{"type":"link","label":"7. Cross-site Request Forgery Attack","href":"/docs/Laravel/csrf","docId":"Laravel/csrf"},{"type":"link","label":"8. Laravel SQLite Setup","href":"/docs/Laravel/sqlite_setup","docId":"Laravel/sqlite_setup"}]},{"type":"category","label":"NodeJS","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"What is the Global Object in Node.js","href":"/docs/NodeJS/global_object","docId":"NodeJS/global_object"},{"type":"link","label":"Node.js\ub780 \ubb34\uc5c7\uc778\uac00? \uacf5\ubd80 \ud3ec\uc778\ud2b8?","href":"/docs/NodeJS/what_is_nodejs","docId":"NodeJS/what_is_nodejs"}]},{"type":"category","label":"PHP","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"1. How does PHP work","href":"/docs/PHP/how_does_php_work","docId":"PHP/how_does_php_work"},{"type":"link","label":"2. PHP Files","href":"/docs/PHP/syntax_php_files","docId":"PHP/syntax_php_files"},{"type":"link","label":"3. Basics of PHP Syntax","href":"/docs/PHP/syntax_basics","docId":"PHP/syntax_basics"},{"type":"link","label":"4. Arrays in PHP","href":"/docs/PHP/syntax_array","docId":"PHP/syntax_array"},{"type":"link","label":"5. Loops in PHP","href":"/docs/PHP/syntax_loop","docId":"PHP/syntax_loop"},{"type":"link","label":"6. User-defined functions","href":"/docs/PHP/syntax_functions","docId":"PHP/syntax_functions"},{"type":"link","label":"7. Structuring a PHP File: Best Practices","href":"/docs/PHP/how_to_structure_php","docId":"PHP/how_to_structure_php"},{"type":"link","label":"8. File Processing","href":"/docs/PHP/file_processing","docId":"PHP/file_processing"},{"type":"link","label":"9. Action Script and Guestbook Example","href":"/docs/PHP/action_script","docId":"PHP/action_script"},{"type":"link","label":"10. Object Oriented PHP","href":"/docs/PHP/syntax_object_oriented","docId":"PHP/syntax_object_oriented"},{"type":"link","label":"11. Include and require","href":"/docs/PHP/syntax_include_require","docId":"PHP/syntax_include_require"},{"type":"link","label":"12. Namespace and Use","href":"/docs/PHP/syntax_namespace_use","docId":"PHP/syntax_namespace_use"},{"type":"link","label":"13. Global Variables","href":"/docs/PHP/syntax_global_variable","docId":"PHP/syntax_global_variable"},{"type":"link","label":"14. Define Constants","href":"/docs/PHP/syntax_constants","docId":"PHP/syntax_constants"},{"type":"link","label":"15. Built-in Functions (String)","href":"/docs/PHP/syntax_builtin-functions","docId":"PHP/syntax_builtin-functions"},{"type":"link","label":"16. Debugging tips","href":"/docs/PHP/debugging_tips","docId":"PHP/debugging_tips"},{"type":"link","label":"17. Accessing URL Variables","href":"/docs/PHP/accessing_url_variables","docId":"PHP/accessing_url_variables"},{"type":"link","label":"18. Input Sanitisation","href":"/docs/PHP/input_sanitisation","docId":"PHP/input_sanitisation"},{"type":"link","label":"19. Input Validation","href":"/docs/PHP/input_validation","docId":"PHP/input_validation"},{"type":"link","label":"20. PHP Data Objects (PDO)","href":"/docs/PHP/php_data_objects","docId":"PHP/php_data_objects"}]},{"type":"link","label":"\ud83d\udcd6 Today I Learned","href":"/docs/","docId":"README"},{"type":"category","label":"RESTful API","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Web APIs Design","href":"/docs/RESTfulAPI/restful_design","docId":"RESTfulAPI/restful_design"}],"href":"/docs/RESTfulAPI/"}]},"docs":{"Database/programming_db":{"id":"Database/programming_db","title":"Programming with databases","description":"- There are two approaches to build a web application using PHP that uses a database:","sidebar":"tutorialSidebar"},"Database/sqlite_mysql":{"id":"Database/sqlite_mysql","title":"SQLite vs MySQL","description":"Database Servers","sidebar":"tutorialSidebar"},"Express/chaining_middleware":{"id":"Express/chaining_middleware","title":"Chaining middleware in Express.js","description":"Chaining middleware in Express refers to the process of creating a series of middleware functions that are executed sequentially. Each middleware function has the opportunity to process the request and response objects, perform some logic, and then either respond to the request or call the next middleware in the chain using the next() function.","sidebar":"tutorialSidebar"},"Express/error_handling":{"id":"Express/error_handling","title":"Error Handling in Express","description":"Error handling is a crucial aspect of any application, and in Express.js, it\'s no different. In this blog post, we\'ll explore various ways to handle errors in Express, both synchronously and asynchronously, with practical examples.","sidebar":"tutorialSidebar"},"Express/express_middleware":{"id":"Express/express_middleware","title":"Key Features of Middleware in Express","description":"Express.js is a popular web application framework for Node.js, and one of its core concepts is middleware. Middleware functions are functions that have access to the request object (req), the response object (res), and the next function in the application\u2019s request-response cycle. Let\'s dive into the details and explore the features, usage, and some examples of middleware in Express.js.","sidebar":"tutorialSidebar"},"Express/json_middleware":{"id":"Express/json_middleware","title":"Internal Middleware: express.json()\\n","description":"express.json() is a built-in middleware function in Express. It parses incoming requests with JSON payloads and is based on the body-parser module.","sidebar":"tutorialSidebar"},"Express/router":{"id":"Express/router","title":"Internal Middleware: express.Router()\\n","description":"Router","sidebar":"tutorialSidebar"},"Express/static_middleware":{"id":"Express/static_middleware","title":"Internal Middleware: express.static()\\n","description":"One of the Express.js powerful features is the ability to serve static files such as images, CSS files, and JavaScript files. This is where express.static() comes into play. In this article, we\'ll explore how to use express.static() to serve static files and create a more dynamic web experience.","sidebar":"tutorialSidebar"},"Express/urlencoded_middleware":{"id":"Express/urlencoded_middleware","title":"Internal Middleware: express.urlencoded()\\n","description":"Starting from version 4.16.0, Express.js introduced a built-in middleware function called express.urlencoded(). This function plays a crucial role in parsing incoming requests with URL-encoded payloads. It\'s based on the body-parser library and provides essential functionality for handling form submissions in web applications.","sidebar":"tutorialSidebar"},"Express/why_use_express":{"id":"Express/why_use_express","title":"Why Use Express?","description":"Node.js","sidebar":"tutorialSidebar"},"Git/git_flow":{"id":"Git/git_flow","title":"What is Git Flow?","description":"Git Flow is a branching model for version control using the popular Git version control system. It is designed to provide a structured and organised workflow for managing the development and release of software projects.","sidebar":"tutorialSidebar"},"Git/git_merge_conflict":{"id":"Git/git_merge_conflict","title":"Merge conflict","description":"Basic Concept","sidebar":"tutorialSidebar"},"Git/version_control_and_git":{"id":"Git/version_control_and_git","title":"Version Control System and Git","description":"- Version Control: A system that allows developers to track changes made to their code or files over time.","sidebar":"tutorialSidebar"},"JavaScript/closure":{"id":"JavaScript/closure","title":"Closure","description":"What is Closure?","sidebar":"tutorialSidebar"},"JavaScript/execution_context":{"id":"JavaScript/execution_context","title":"Execution Context: Variables environment and Hoisting\\n","description":"Understanding JavaScript can often feel like untagling a ball of wool, especially with peculiar concept such as hoisting, closures, and the ubiquitous this. However, diving depp into how JavaScript works, especially its execution context, can provide clarity.","sidebar":"tutorialSidebar"},"JavaScript/execution_context2":{"id":"JavaScript/execution_context2","title":"Execution Context: Call Stack\\n","description":"The Execution Context (EC)","sidebar":"tutorialSidebar"},"JavaScript/execution_context3":{"id":"JavaScript/execution_context3","title":"Execution Context: Lexical environment and block scop\\n","description":"Scope in JavaScript","sidebar":"tutorialSidebar"},"JavaScript/object":{"id":"JavaScript/object","title":"Object","description":"Grouping Related Properties and Methods Together","sidebar":"tutorialSidebar"},"JavaScript/why_use_arrow_function":{"id":"JavaScript/why_use_arrow_function","title":"When, Where, and How to use the arrow function syntax!!","description":"Arrow functions were first introduced in ES6 (ECAMAScript 2015). They provide a concise and convenient syntax for defining functions.","sidebar":"tutorialSidebar"},"Laravel/blade_templating":{"id":"Laravel/blade_templating","title":"Blade Template for Laravel","description":"Blade Templates","sidebar":"tutorialSidebar"},"Laravel/creating_new_project":{"id":"Laravel/creating_new_project","title":"Creating Laravel Project","description":"Laravel project can be created via using either:","sidebar":"tutorialSidebar"},"Laravel/csrf":{"id":"Laravel/csrf","title":"Cross-site Request Forgery Attack and Prevention in Laravel","description":"Cross-site Request Forgery Attack","sidebar":"tutorialSidebar"},"Laravel/route_laravel":{"id":"Laravel/route_laravel","title":"Routes","description":"In the beginning web wervers simply served files. The URL was simply the file path on the server. For example, the file:","sidebar":"tutorialSidebar"},"Laravel/sqlite_setup":{"id":"Laravel/sqlite_setup","title":"Laravel SQLite Setup","description":"Laravel SQLite Setup","sidebar":"tutorialSidebar"},"Laravel/templating":{"id":"Laravel/templating","title":"Concept of Templating Languages","description":"Using PHP to insert data into HTML can often verbose. A templating language can make it simpler and quicker to intersperse data with HTML. Laravel uses the Blade templating language.","sidebar":"tutorialSidebar"},"Laravel/view_laravel":{"id":"Laravel/view_laravel","title":"View in Larabel","description":"Laravel Views","sidebar":"tutorialSidebar"},"Laravel/what_is_webframework":{"id":"Laravel/what_is_webframework","title":"What is Web Framework","description":"Web development often involves writing repetitive code for common tasks. For instance, when creating a new table for a website, multiple tasks need to be accomplished: writing SQL for table creation, crafting templates for adding, viewing, listing, and updating items, and developing PHP scripts for input validation and output sanitization. These tasks can be time-consuming and repetitive, especially when repeated for each new table or feature in a project. Is there a more efficient way? That\'s where web frameworks come in.","sidebar":"tutorialSidebar"},"NodeJS/global_object":{"id":"NodeJS/global_object","title":"What is the Global Object in Node.js","description":"The global object refers to the unique top-level object of all objects and is commonly known as \'window\' in the browser-side and \'global\' in Server-side (Node.js).","sidebar":"tutorialSidebar"},"NodeJS/what_is_nodejs":{"id":"NodeJS/what_is_nodejs","title":"Node.js\ub780 \ubb34\uc5c7\uc778\uac00? \uacf5\ubd80 \ud3ec\uc778\ud2b8?","description":"JS Engine History","sidebar":"tutorialSidebar"},"PHP/accessing_url_variables":{"id":"PHP/accessing_url_variables","title":"Accessing URL Variables","description":"How to access to HTTP method","sidebar":"tutorialSidebar"},"PHP/action_script":{"id":"PHP/action_script","title":"Action Script and Guestbook Example","description":"1. Action Scripts in PHP","sidebar":"tutorialSidebar"},"PHP/debugging_tips":{"id":"PHP/debugging_tips","title":"Debugging Tips","description":"1. var_dump()","sidebar":"tutorialSidebar"},"PHP/file_processing":{"id":"PHP/file_processing","title":"File Processing","description":"File processing is a fundamental aspect of programming, allowing you to interact with files stored on a system. In PHP, you can perform various file operations, such as reading, writing, and appending, to manage and manipulate data. Let\'s delve deeper into the key concepts of file processing:","sidebar":"tutorialSidebar"},"PHP/how_does_php_work":{"id":"PHP/how_does_php_work","title":"How does PHP work","description":"- When a client requests a PHP file, the Web Server will redirect the requesets to the PHP Engine.","sidebar":"tutorialSidebar"},"PHP/how_to_structure_php":{"id":"PHP/how_to_structure_php","title":"Structuring a PHP File - Best Practices","description":"PHP Code Block","sidebar":"tutorialSidebar"},"PHP/input_sanitisation":{"id":"PHP/input_sanitisation","title":"Input Sanitisation","description":"Why Input Sanitisation is needed?","sidebar":"tutorialSidebar"},"PHP/input_validation":{"id":"PHP/input_validation","title":"Input Validation","description":"Input validation is the process of checking that data entered by users is valid, e.g., that names are nonempty, that email addresses have valid syntax, that numeric fields are numbers in the correct range, that username/password pairs correspond to registered users, and so on.","sidebar":"tutorialSidebar"},"PHP/php_data_objects":{"id":"PHP/php_data_objects","title":"PHP Data Objects (PDO)","description":"\u2022 Accessing a database involves five steps:","sidebar":"tutorialSidebar"},"PHP/syntax_array":{"id":"PHP/syntax_array","title":"Arrays in PHP","description":"- An array in PHP is an ordered map.","sidebar":"tutorialSidebar"},"PHP/syntax_basics":{"id":"PHP/syntax_basics","title":"Basics of PHP Syntax","description":"Semi-colons","sidebar":"tutorialSidebar"},"PHP/syntax_builtin-functions":{"id":"PHP/syntax_builtin-functions","title":"Essential Built-in Functions for String","description":"Number of characters","sidebar":"tutorialSidebar"},"PHP/syntax_constants":{"id":"PHP/syntax_constants","title":"Define Constants","description":"- Constants are created using the define function:","sidebar":"tutorialSidebar"},"PHP/syntax_functions":{"id":"PHP/syntax_functions","title":"User-defined functions","description":"- PHP functions are similar to functions in other programming languages.","sidebar":"tutorialSidebar"},"PHP/syntax_global_variable":{"id":"PHP/syntax_global_variable","title":"Global Variables","description":"Global variables are variables declared outside functions, or classes e.g:","sidebar":"tutorialSidebar"},"PHP/syntax_include_require":{"id":"PHP/syntax_include_require","title":"Include and require","description":"Accessing to external files: require or include","sidebar":"tutorialSidebar"},"PHP/syntax_loop":{"id":"PHP/syntax_loop","title":"Loops in PHP","description":"Basic syntax","sidebar":"tutorialSidebar"},"PHP/syntax_namespace_use":{"id":"PHP/syntax_namespace_use","title":"Namespace and Use","description":"Namespace","sidebar":"tutorialSidebar"},"PHP/syntax_object_oriented":{"id":"PHP/syntax_object_oriented","title":"Object Oriented PHP","description":"PHP supports all the features of object-oriented programming, e.g.: classes, objects, visibility, static, inheritance, interface etc.","sidebar":"tutorialSidebar"},"PHP/syntax_php_files":{"id":"PHP/syntax_php_files","title":"How does PHP work","description":"- PHP is first and foremost a _templating language_.","sidebar":"tutorialSidebar"},"README":{"id":"README","title":"\ud83d\udcd6 Today I Learned","description":"","sidebar":"tutorialSidebar"},"RESTfulAPI/restful_design":{"id":"RESTfulAPI/restful_design","title":"Web APIs Design","description":"Designing Web APIs","sidebar":"tutorialSidebar"},"RESTfulAPI/restfulapi":{"id":"RESTfulAPI/restfulapi","title":"RESTful API","description":"- API: Stands for Application Programming Interface.","sidebar":"tutorialSidebar"}}}')}}]);